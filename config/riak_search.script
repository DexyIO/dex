$ iex
>
pid = :pooler.take_group_member(:riak)
xml = File.read! "priv/schemas/schema_userdata.xml"
:riakc_pb_socket.create_search_schema(pid, "schema_userdata", xml)
:riakc_pb_socket.create_search_index(pid, "idx_userdata", "schema_userdata", [])
:pooler.return_group_member(:riak, pid, :ok)


$
riak-admin bucket-type create userdata \
'{"props":{"search_index":"idx_userdata","allow_mult":false,"last_write_wins":true}}'
riak-admin bucket-type activate userdata


$ riak attach
>
yz_extractor:register("application/dexyml", yz_dexyml_extractor).
yz_extractor:run(term_to_binary([]), yz_dexyml_extractor).

$ cd dex
$ iex -S mix
>
Dex.put("kook", "foo", "bar")
Dex.get("kook", "foo")
Dex.search("user:kook", [])

